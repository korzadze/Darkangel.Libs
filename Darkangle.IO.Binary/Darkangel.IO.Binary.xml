<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Darkangel.IO.Binary</name>
    </assembly>
    <members>
        <member name="T:Darkangel.IO.LoadDataHandler">
            <summary>
            <para>Обработчик загрузки данных</para>
            </summary>
            <param name="sender">Объект данных, вызвавший обработчик</param>
        </member>
        <member name="T:Darkangel.IO.BinaryData">
            <summary>
            <para>Базовый объект, инкапсулирующий функционал
            загрузки/сохранения двоичных данных</para>
            </summary>
        </member>
        <member name="E:Darkangel.IO.BinaryData.OnAfterLoadData">
            <summary>
            <para>Событие, генерируемое после загрузки данных из потока</para>
            </summary>
        </member>
        <member name="E:Darkangel.IO.BinaryData.OnBeforeLoadData">
            <summary>
            <para>Событие, генерируемое перед загрузкой данных из потока</para>
            </summary>
        </member>
        <member name="E:Darkangel.IO.BinaryData.OnAfterStoreData">
            <summary>
            <para>Событие, генерируемое после сохранения данных в поток</para>
            </summary>
        </member>
        <member name="E:Darkangel.IO.BinaryData.OnBeforeStoreData">
            <summary>
            <para>Событие, генерируемое перед сохранением данных в поток</para>
            </summary>
        </member>
        <member name="P:Darkangel.IO.BinaryData.LoadOffset">
            <summary>
            <para>Смещение в потоке, с которого начинаются загруженные данные</para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.BinaryData.GetSize(Darkangel.IO.IBinaryContext)">
            <summary>
            <para>Размер данных в заданном двоичном контексте</para>
            </summary>
            <param name="context">Контекст хранения двоичных данных</param>
            <returns>Размер данных</returns>
        </member>
        <member name="M:Darkangel.IO.BinaryData.LoadAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <summary>
            <para>Загрузить данные из двоичного потока</para>
            </summary>
            <param name="context">Контекст хранения двоичных данных</param>
            <param name="stream">Входной поток</param>
            <returns>Состояние выполнения</returns>
        </member>
        <member name="M:Darkangel.IO.BinaryData.StoreAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <summary>
            <para>Сохранить данные в двоичный поток</para>
            </summary>
            <param name="context">Контекст хранения двоичных данных</param>
            <param name="stream">Выходной поток</param>
            <returns>Состояние выполнения</returns>
        </member>
        <member name="M:Darkangel.IO.BinaryData.Load(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <summary>
            <para>Загрузить данные из двоичного потока</para>
            </summary>
            <param name="context">Контекст хранения двоичных данных</param>
            <param name="stream">Входной поток</param>
            <returns>Состояние выполнения</returns>
        </member>
        <member name="M:Darkangel.IO.BinaryData.Store(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <summary>
            <para>Сохранить данные в двоичный поток</para>
            </summary>
            <param name="context">Контекст хранения двоичных данных</param>
            <param name="stream">Выходной поток</param>
            <returns>Состояние выполнения</returns>
        </member>
        <member name="T:Darkangel.IO.BinaryField`1">
            <summary>
            <para>Базовый класс для полей двоичной структуры</para>
            </summary>
            <typeparam name="T">Тип значения поля</typeparam>
        </member>
        <member name="F:Darkangel.IO.BinaryField`1.Value">
            <summary>
            <para>Значение поля структуры</para>
            </summary>
        </member>
        <member name="T:Darkangel.IO.FloatStoreFormat">
            <summary>
            <para>Формат хранения чисел с плавающей точкой</para>
            </summary>
        </member>
        <member name="F:Darkangel.IO.FloatStoreFormat.IEEE754">
            <summary>
            <para>IEEE 754 — 1985, 2008</para>
            </summary>
        </member>
        <member name="F:Darkangel.IO.FloatStoreFormat.MSBinary">
            <summary>
            <para>Microsoft Binary Format (MBF)</para>
            </summary>
        </member>
        <member name="T:Darkangel.IO.IBinaryContext">
            <summary>
            <para>Контекст хранения данных в двоичном потоке</para>
            </summary>
        </member>
        <member name="P:Darkangel.IO.IBinaryContext.IsLittleEndian">
            <summary>
            <para>Порядок хранения байт в потоке</para>
            <list type="table">
            <item>True: от младшего к старшему</item>
            <item>False: от старшего к младшему</item>
            </list>
            </summary>
        </member>
        <member name="P:Darkangel.IO.IBinaryContext.Integer">
            <summary>
            <para>Описание хранения целочисленных значений в двоичном потоке</para>
            </summary>
        </member>
        <member name="P:Darkangel.IO.IBinaryContext.Float">
            <summary>
            <para>Описание хранения значений с плавающей точкой в двоичном потоке</para>
            </summary>
        </member>
        <member name="P:Darkangel.IO.IBinaryContext.String">
            <summary>
            <para>Описание хранения строковых значений в двоичном потоке</para>
            </summary>
        </member>
        <member name="T:Darkangel.IO.IFloatContext">
            <summary>
            <para>Описание хранения значений с плавающей точкой в двоичном потоке</para>
            </summary>
        </member>
        <member name="P:Darkangel.IO.IFloatContext.StoreFormat">
            <summary>
            <para>Формат хранения значений с плавающей точкой</para>
            </summary>
        </member>
        <member name="T:Darkangel.IO.IInetegerContext">
            <summary>
            <para>Описание хранения целочисленных значений в двоичном потоке</para>
            </summary>
        </member>
        <member name="T:Darkangel.IO.Intel86DefaultContext">
            <summary>
            <para>Контекст хранения двоичных данных для C/C++ Intel x86</para>
            </summary>
        </member>
        <member name="P:Darkangel.IO.Intel86DefaultContext.IsLittleEndian">
            <inheritdoc/>
        </member>
        <member name="P:Darkangel.IO.Intel86DefaultContext.Integer">
            <inheritdoc/>
        </member>
        <member name="P:Darkangel.IO.Intel86DefaultContext.Float">
            <inheritdoc/>
        </member>
        <member name="P:Darkangel.IO.Intel86DefaultContext.String">
            <inheritdoc/>
        </member>
        <member name="T:Darkangel.IO.IStringContext">
            <summary>
            <para>Описание формата хранения строк в двоичном потоке</para>
            </summary>
        </member>
        <member name="P:Darkangel.IO.IStringContext.PreffixSize">
            <summary>
            <para>Если больше 0, то описывает размер префикса размера строки</para>
            </summary>
        </member>
        <member name="P:Darkangel.IO.IStringContext.Terminator">
            <summary>
            <para>Символ окончания строки в потоке</para>
            </summary>
        </member>
        <member name="P:Darkangel.IO.IStringContext.PaddingChar">
            <summary>
            <para>Символ дополнения строки до максимального размера</para>
            </summary>
        </member>
        <member name="P:Darkangel.IO.IStringContext.Encoding">
            <summary>
            <para>Кодировка текстовых данных</para>
            </summary>
        </member>
        <member name="T:Darkangel.IO.Fields">
            <summary>
            <para>Реализация полей, соответствующих стандартным типам</para>
            </summary>
        </member>
        <member name="T:Darkangel.IO.Fields.Byte">
            <summary>
            <para>Поле типа <see cref="T:System.Byte"/></para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.Fields.Byte.GetSize(Darkangel.IO.IBinaryContext)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.Byte.LoadAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.Byte.StoreAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="T:Darkangel.IO.Fields.Int16">
            <summary>
            <para>Поле типа <see cref="T:System.Int16"/></para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.Fields.Int16.GetSize(Darkangel.IO.IBinaryContext)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.Int16.LoadAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.Int16.StoreAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="T:Darkangel.IO.Fields.Int24">
            <summary>
            <para>Поле типа <see cref="T:Darkangel.IntegerX.Int24"/></para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.Fields.Int24.GetSize(Darkangel.IO.IBinaryContext)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.Int24.LoadAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.Int24.StoreAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="T:Darkangel.IO.Fields.Int32">
            <summary>
            <para>Поле типа <see cref="T:System.Int32"/></para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.Fields.Int32.GetSize(Darkangel.IO.IBinaryContext)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.Int32.LoadAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.Int32.StoreAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="T:Darkangel.IO.Fields.Int48">
            <summary>
            <para>Поле типа <see cref="T:Darkangel.IntegerX.Int48"/></para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.Fields.Int48.GetSize(Darkangel.IO.IBinaryContext)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.Int48.LoadAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.Int48.StoreAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="T:Darkangel.IO.Fields.Int64">
            <summary>
            <para>Поле типа <see cref="T:System.Int64"/></para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.Fields.Int64.GetSize(Darkangel.IO.IBinaryContext)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.Int64.LoadAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.Int64.StoreAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="T:Darkangel.IO.Fields.SByte">
            <summary>
            <para>Поле типа <see cref="T:System.SByte"/></para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.Fields.SByte.GetSize(Darkangel.IO.IBinaryContext)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.SByte.LoadAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.SByte.StoreAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="T:Darkangel.IO.Fields.UInt16">
            <summary>
            <para>Поле типа <see cref="T:System.UInt16"/></para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.Fields.UInt16.GetSize(Darkangel.IO.IBinaryContext)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.UInt16.LoadAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.UInt16.StoreAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="T:Darkangel.IO.Fields.UInt24">
            <summary>
            <para>Поле типа <see cref="T:Darkangel.IntegerX.UInt24"/></para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.Fields.UInt24.GetSize(Darkangel.IO.IBinaryContext)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.UInt24.LoadAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.UInt24.StoreAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="T:Darkangel.IO.Fields.UInt32">
            <summary>
            <para>Поле типа <see cref="T:System.UInt32"/></para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.Fields.UInt32.GetSize(Darkangel.IO.IBinaryContext)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.UInt32.LoadAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.UInt32.StoreAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="T:Darkangel.IO.Fields.UInt48">
            <summary>
            <para>Поле типа <see cref="T:Darkangel.IntegerX.UInt48"/></para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.Fields.UInt48.GetSize(Darkangel.IO.IBinaryContext)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.UInt48.LoadAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.UInt48.StoreAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="T:Darkangel.IO.Fields.UInt64">
            <summary>
            <para>Поле типа <see cref="T:System.UInt64"/></para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.Fields.UInt64.GetSize(Darkangel.IO.IBinaryContext)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.UInt64.LoadAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:Darkangel.IO.Fields.UInt64.StoreAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="T:Darkangel.IO.IBinaryLoadable">
            <summary>
            <para>Интерфейс объекта, хранящего свои данные в двоичном потоке</para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.IBinaryLoadable.Load(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <summary>
            <para>Загрузить данные из двоичного потока</para>
            </summary>
            <param name="context">Контекст хранения двоичных данных в потоке</param>
            <param name="stream">Исходный поток данных</param>
        </member>
        <member name="M:Darkangel.IO.IBinaryLoadable.LoadAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <summary>
            <para>Загрузить данные из двоичного потока</para>
            </summary>
            <param name="context">Контекст хранения двоичных данных в потоке</param>
            <param name="stream">Исходный поток данных</param>
        </member>
        <member name="T:Darkangel.IO.IBinaryObject">
            <summary>
            <para>Интерфейс объекта, с возможностью загрузки и сохранения данных
            в двоичных потоках</para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.IBinaryObject.GetSize(Darkangel.IO.IBinaryContext)">
            <summary>
            <para>Получить размер объекта в потоке</para>
            </summary>
            <param name="context">Контекст хранения двоичных данных в потоке</param>
            <returns>Размер объекта в потоке</returns>
        </member>
        <member name="T:Darkangel.IO.IBinaryStorable">
            <summary>
            <para>Интерфейс объекта, сохраняющего свои данные в двоичном потоке</para>
            </summary>
        </member>
        <member name="M:Darkangel.IO.IBinaryStorable.Store(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <summary>
            <para>Сохранить данные в двоичном потоке</para>
            </summary>
            <param name="context">Контекст хранения двоичных данных в потоке</param>
            <param name="stream">Целевой поток данных</param>
        </member>
        <member name="M:Darkangel.IO.IBinaryStorable.StoreAsync(Darkangel.IO.IBinaryContext,System.IO.Stream)">
            <summary>
            <para>Сохранить данные в двоичном потоке</para>
            </summary>
            <param name="context">Контекст хранения двоичных данных в потоке</param>
            <param name="stream">Целевой поток данных</param>
        </member>
    </members>
</doc>
